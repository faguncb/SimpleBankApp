name: 🚀 Automated Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0

env:
  JAVA_VERSION: '17'

jobs:
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: 🔧 Make gradlew executable
        run: chmod +x gradlew

      - name: 🏗️ Build application
        run: ./gradlew clean build

      - name: 🧪 Run tests
        run: ./gradlew test

      - name: 📊 Generate test coverage
        run: ./gradlew jacocoTestReport

      - name: 📦 Create distribution
        run: ./gradlew distTar distZip

      - name: 🏷️ Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: 📝 Generate changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "## 🏦 SimpleBankApp Release ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 🎯 Features" >> $GITHUB_OUTPUT
          echo "- Interactive banking application" >> $GITHUB_OUTPUT
          echo "- Account management (create, delete, view)" >> $GITHUB_OUTPUT
          echo "- Transaction history tracking" >> $GITHUB_OUTPUT
          echo "- Comprehensive test coverage" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 🛠️ Technical Improvements" >> $GITHUB_OUTPUT
          echo "- Automated CI/CD pipeline" >> $GITHUB_OUTPUT
          echo "- Code quality checks" >> $GITHUB_OUTPUT
          echo "- Security vulnerability scanning" >> $GITHUB_OUTPUT
          echo "- Automated dependency updates" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 📦 Installation" >> $GITHUB_OUTPUT
          echo "1. Download the JAR file from the assets below" >> $GITHUB_OUTPUT
          echo "2. Run with: \`java -jar SimpleBankApp.jar\`" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 🧪 Testing" >> $GITHUB_OUTPUT
          echo "- All tests passing ✅" >> $GITHUB_OUTPUT
          echo "- Code coverage: $(cat build/reports/jacoco/test/jacocoTestReport.xml | grep -o 'line-rate="[^"]*"' | cut -d'"' -f2 | awk '{print int($1*100)"%"}' || echo "N/A")" >> $GITHUB_OUTPUT
          echo "- Security scan: Passed ✅" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 🚀 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: 🏦 SimpleBankApp ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false

      - name: 📤 Upload JAR file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/SimpleBankApp.jar
          asset_name: SimpleBankApp-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive

      - name: 📤 Upload TAR distribution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/SimpleBankApp.tar
          asset_name: SimpleBankApp-${{ steps.get_version.outputs.VERSION }}.tar
          asset_content_type: application/x-tar

      - name: 📤 Upload ZIP distribution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/SimpleBankApp.zip
          asset_name: SimpleBankApp-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip

      - name: 📊 Upload test coverage report
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/reports/jacoco/test/jacocoTestReport.html
          asset_name: test-coverage-report.html
          asset_content_type: text/html
